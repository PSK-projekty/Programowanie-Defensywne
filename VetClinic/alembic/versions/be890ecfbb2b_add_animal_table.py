"""Add animal table

Revision ID: be890ecfbb2b
Revises: 2217e9041918
Create Date: 2025-04-11 17:50:35.398538

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'be890ecfbb2b'
down_revision: Union[str, None] = '2217e9041918'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('animals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False, comment='Imię zwierzęcia'),
    sa.Column('species', sa.String(), nullable=False, comment='Gatunek zwierzęcia, np. pies, kot'),
    sa.Column('breed', sa.String(), nullable=True, comment='Rasa zwierzęcia, może być pusta w przypadku zwierząt mieszanych'),
    sa.Column('gender', sa.String(), nullable=True, comment='Płeć zwierzęcia, np. male, female'),
    sa.Column('birth_date', sa.Date(), nullable=True, comment='Data urodzenia zwierzęcia'),
    sa.Column('age', sa.Integer(), nullable=True, comment='Wiek zwierzęcia (opcjonalnie, może być obliczany na podstawie birth_date)'),
    sa.Column('weight', sa.Float(), nullable=True, comment='Waga zwierzęcia w kg'),
    sa.Column('microchip_number', sa.String(), nullable=True, comment='Numer mikroczipa, jeśli został wszczepiony'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Dodatkowe uwagi dotyczące zwierzęcia'),
    sa.Column('owner_id', sa.Integer(), nullable=False, comment='ID właściciela zwierzęcia'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='Data utworzenia rekordu'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='Data ostatniej modyfikacji rekordu'),
    sa.ForeignKeyConstraint(['owner_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('microchip_number')
    )
    op.create_index(op.f('ix_animals_id'), 'animals', ['id'], unique=False)
    op.create_index(op.f('ix_animals_name'), 'animals', ['name'], unique=False)
    op.create_index(op.f('ix_animals_species'), 'animals', ['species'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_animals_species'), table_name='animals')
    op.drop_index(op.f('ix_animals_name'), table_name='animals')
    op.drop_index(op.f('ix_animals_id'), table_name='animals')
    op.drop_table('animals')
    # ### end Alembic commands ###
